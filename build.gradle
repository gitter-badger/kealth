plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.30'
    id 'org.jetbrains.dokka' version '0.9.18'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
}

group 'io.github.marioalvial'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

ext{
    sonatype_username=project.properties['sonatype_username'] ?: ""
    sonatype_password=project.properties['sonatype_password'] ?: ""
}
repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.0'

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation 'io.mockk:mockk:1.9.3'
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

jacoco {
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.60
            }
        }
    }
}

check.dependsOn jacocoTestReport

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

task('sourceJar', type: Jar) {
    classifier 'sources'
    from sourceSets.main.getAllSource()
}

task('javadocJar', type: Jar) {
    classifier 'javadoc'
    description 'Assembles Kotlin docs with Dokka'
    group JavaBasePlugin.DOCUMENTATION_GROUP
    from(tasks.dokka)
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'io.github.marioalvial'
            artifactId 'kealth'
            version '1.0.0'
            pom {
                name = 'kealth'
                description = 'Health check for external dependencies in Kotlin'
                url = 'https://github.com/marioalvial/kealth'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://github.com/marioalvial/kealth/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'marioalvial'
                        name = 'MÃ¡rio Alvial'
                        email = 'mse.alvial@gmail.com'
                    }
                }
                scm {
                    url = 'https://github.com/marioalvial/kealth'
                    connection = 'scm:git:git://github.com/marioalvial/kealth.git'
                    developerConnection = 'scm:git:ssh:git@github.com:marioalvial/kealth.git'
                }
            }


            from components.java

            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username sonatype_username
                password sonatype_password
            }
        }
    }
}

signing {
    sign configurations.archives
}

model {
    tasks.generatePomFileForMavenPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
    tasks.publishMavenPublicationToMavenLocal {
        dependsOn project.tasks.signArchives
    }
    tasks.publishMavenPublicationToMavenRepository {
        dependsOn project.tasks.signArchives
    }
}